# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    tags: [ '*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  WORKING_DIR: ./common-technique

jobs:
  build_connector:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.8.2

    - name: Extract Maven project version
      working-directory: ${{ env.WORKING_DIR }}
      run: echo ::set-output name=version::$(mvn org.apache.maven.plugins:maven-help-plugin:evaluate -Dexpression=project.version -q -DforceStdout)
      id: project_version

    - name: Build with Maven
      working-directory: ${{ env.WORKING_DIR }}
      run: mvn install -Dmaven.test.skip=true

    - name: Publish to GitHub Packages Apache Maven
      working-directory: ${{ env.WORKING_DIR }}
      run: mvn deploy -Dmaven.test.skip=true -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
        
    - name: Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: v${{ steps.project_version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: ${{ env.WORKING_DIR }}/CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.PACKAGE_REGISTRY_TOKEN }}

    - name: Upload artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PACKAGE_REGISTRY_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.WORKING_DIR }}/target/common-technique-${{ steps.project_version.outputs.version }}.jar
        asset_name: common-technique-${{ steps.project_version.outputs.version }}.jar
        asset_content_type: application/jar